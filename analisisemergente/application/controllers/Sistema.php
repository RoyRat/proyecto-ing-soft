<?phpclass Sistema extends CI_Controller{    public function __construct() {        parent::__construct();        $this->load->model('msistema');        $this->load->model('mvarios');    }           function index(){            $datos['aprobador']=$this->session->userdata('US_ADMINISTRADOR');			$datos['usuario']=$this->session->userdata('US_USUARIO');			$datos['sistemas']=$this->session->userdata('US_ADMSISTEMAS');            $this->load->view("sistema/js/index_sis_js",$datos);            $this->load->view("sistema/index_sis_v",$datos);        }                function getdatosItems(){            echo  $this->msistema->getdatosItems();        }     	 	//funcion para cear una nueva lista	public function nuevoSistema(){                 $datos=$this->datos(null,'n');            $datos['accion'] = 'n';            $this->load->view("sistema/sistema_v",$datos);            $this->load->view("sistema/js/sistema_js",$datos);        }                //funcion para ver la informacion de un registro        function verSistema($accion=null){            $numero=  $this->input->post('NUMERO');            if(!empty($numero)){                $sol = $this->msistema->dataRegistro($numero);                      $USER=$this->session->userdata('US_CODIGO');					  $nombreuser=$this->db->query("SELECT US_NOMBRES FROM USUARIO WHERE US_CODIGO='$USER'")->row();                      if ($accion=='v'|$accion=='e'|$accion=='x'|$accion=='d'){                            $datos=$this->datos($sol,$accion);                            $datos['sol']=$sol;                            $datos['accion'] = $accion;                            $this->load->view("sistema/sistema_v",$datos);                            $this->load->view("sistema/js/sistema_js",$datos);                      } else {                            echo alerta("La acción no es reconocida");                      }            }else{                echo alerta("No se puede mostrar el formulario, debe seleccionar un registro para continuar.");            }        }              	//funcion para dar los valores a la cabecera tanto en nuevo, como al momento de editar	function datos($sol,$accion){        if ($accion=='n') {			$datos=null;        } else {							$datos=null;        }        return($datos);     }	     	//Administra las foncuiones de nuevo y editar en un registro    function admSistema($accion){        switch($accion){            case 'n':                echo $this->msistema->addSistema();                break;            case 'e':                echo $this->msistema->editSistema();                break;        }            }    	//Cambia de estado a pasivo a un usuario    function anularSistema(){         $APP_SECUENCIAL=$this->input->post('NUMERO');            $SQL="update APLICACION set APP_ESTADO=1 where APP_SECUENCIAL=$APP_SECUENCIAL";             $this->db->query($SQL);            echo json_encode(array("cod"=>1,"mensaje"=>highlight("Usuario ".$APP_SECUENCIAL." Anulado")));     }		//Cambia de estado a activo a un usuario    function activarSistema(){         $APP_SECUENCIAL=$this->input->post('NUMERO');            $SQL="update APLICACION set APP_ESTADO=0 where APP_SECUENCIAL=$APP_SECUENCIAL";             $this->db->query($SQL);            echo json_encode(array("cod"=>1,"mensaje"=>highlight("Usuario ".$APP_SECUENCIAL." Activado")));     }	//funcion para mostrar datos de las directivas	function getdirectivas(){        $aplicacion=  $this->input->post('sistema');        echo $this->msistema->getdirectivas($aplicacion);    }		function indexappdirectiva($accion){        $datos['accion']=$accion;        $datos['USD_SISTEMA']=$this->input->post('sistema');        $this->load->view('sistema/appdirectiva_v',$datos);    }		function addappdirectiva(){            echo $this->msistema->addappdirectiva();        }			public function actappdirectiva(){            $this->msistema->cambiarEstado($_POST['sec'],"DIRECTIVAS","USD_ESTADO","USD_SECUENCIAL",0);            echo json_encode(array("cod"=>0,"mensaje"=>  "Directiva activada correctamente."));        }                public function delappdirectiva(){            $this->msistema->cambiarEstado($_POST['sec'],"DIRECTIVAS","USD_ESTADO","USD_SECUENCIAL",1);            echo json_encode(array("cod"=>0,"mensaje"=>  "Directiva bloqueada correctamente."));        }				//Incio para roles del sistemafunction indexrolSistema(){        $datos['sistema']=$this->input->post('sistema');		$datos['sistemas']=$this->session->userdata('US_ADMSISTEMAS');        $datos['NombreDialog']=  $this->input->post('NombreDialog');        $this->load->view('sistema/index_roles_v',$datos);        $this->load->view('sistema/js/index_roles_js',$datos);    }public function getListadoRoles(){         $aplicacion=  $this->input->post('sistema');         echo $this->msistema->getRoles($aplicacion);     }public function MostrarFormluarioRoles($accion){             $data['accion']=$accion;             if ($accion=='1'){                  $data = $this->msistema->getPerfilesRow($_POST['USR_SECUENCIAL']);             }             $data['USR_SISTEMA']=$this->input->post('sistema');            $this->load->view("sistema/usu_rolFrm",$data);        }public function GrabarFormRoles(){            echo $this->msistema->addRoles($_POST);         }public function GrabarmodFormRoles(){            echo $this->msistema->modRoles($_POST);         }public function bloquearPerfil(){            $this->msistema->cambiarEstado($_POST['USR_SECUENCIAL'],"ROLES","USR_ESTADO","USR_SECUENCIAL",1);            echo success("Perfil bloqueado correctamente.");        }                public function ActivarPerfil(){            $this->msistema->cambiarEstado($_POST['USR_SECUENCIAL'],"ROLES","USR_ESTADO","USR_SECUENCIAL",0);            echo success("Perfil Activado correctamente.");        }public function MostrarEliminacionRoles(){            if(!empty($_POST['USR_SECUENCIAL'])){                                $this->load->view("sistema/usu_rolDelFrm",$_POST,false);            }else{                echo alerta("No ha seleccionado ningún elemento");            }        }public function EliminarRoles(){            $output = array();            if(!empty($_POST['USR_SECUENCIAL'])){                $cmp = $this->comprobarEliminacionRoles($_POST['USR_SECUENCIAL']);                if(empty($cmp)){                    $this->msistema->delRoles($_POST['USR_SECUENCIAL']);                    $output['mensaje'] = success("Perfil eliminado correctamente");                }else{                    $output['mensaje'] = alerta("No se puede eliminar un perfil <br />que tenga participantes o perfiles apuntados.");                }                            }else{                $output['mensaje'] =  alerta("No se ha podido eliminar el perfil");            }            echo json_encode($output);        }private function comprobarEliminacionRoles($USR_SECUENCIAL = null){                   $ContadosxPerfiles = $this->db->select("(COUNT(USR_SECUENCIAL)) CONTADOS")                     ->where("USR_PREDECESOR = {$USR_SECUENCIAL}")                     ->get("ROLES")                     ->row()                     ->CONTADOS;                                 return  $ContadosxPerfiles;        }//Inicio para directivas del sistemafunction getdirectivasrol($rol){        echo $this->msistema->getdirectivasrol($rol);    }	public function MostrarFormluarioDir(){            $data['USR_SECUENCIAL'] = $_POST['USR_SECUENCIAL'];            $data['USR_SISTEMA']=$_POST['sistema'];            $data["COMBO_DIRECTIVAS"] =  $this->msistema->comboDirectivasFrm("USP_SECDIRECTIVA",$_POST['USR_SECUENCIAL']);            $this->load->view("sistema/usu_dirFrm",$data,false);        }			public function getDirectivaRow(){            echo $this->msistema->getDirectivasRow($_POST['USD_SECUENCIAL']);        }public function GrbFrmDir(){            if($this->msistema->addDir($_POST)):                $output['mensaje'] = success("Directiva almacenada correctamente");            else:                $output['mensaje'] = alerta("No se pudo almacenar la directiva, contacte con el administrador");            endif;            echo json_encode($output);        }public function blqrDir(){            $this->msistema->cambiarEstado($_POST['sec'],"PERMISOS","USP_ESTADO","USP_SECUENCIAL",1);            $output['mensaje'] =success("Directiva bloqueada correctamente.");            echo json_encode($output);        }        public function ActvrDir(){            $this->msistema->cambiarEstado($_POST['sec'],"PERMISOS","USP_ESTADO","USP_SECUENCIAL",0);             $output['mensaje'] = success("Directiva activada correctamente.");             echo json_encode($output);        }		 }?>